"""init db

Revision ID: 157f8e4282f7
Revises: 
Create Date: 2017-08-16 17:27:18.673768

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '157f8e4282f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dns_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sub_domain', sa.String(length=64), nullable=False),
    sa.Column('domain', sa.String(length=64), nullable=True),
    sa.Column('value', sa.String(length=64), nullable=False),
    sa.Column('record_type', sa.String(length=64), nullable=False),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('groups',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('comments', sa.String(length=1024), nullable=True),
    sa.PrimaryKeyConstraint('group_id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('loadbalancers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('loadbalancer_id', sa.String(length=64), nullable=False),
    sa.Column('loadbalancer_name', sa.String(length=64), nullable=True),
    sa.Column('address', sa.String(length=64), nullable=True),
    sa.Column('address_type', sa.String(length=64), nullable=True),
    sa.Column('loadbalancer_status', sa.String(length=64), nullable=True),
    sa.Column('region_id', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('loadbalancer_id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('policies',
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('default_version', sa.Integer(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.Column('delete_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('policy_id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('servers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instance_id', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('memory', sa.Integer(), nullable=True),
    sa.Column('cpu', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('inner_ip_address', sa.String(length=64), nullable=True),
    sa.Column('public_ip_address', sa.String(length=64), nullable=True),
    sa.Column('server_type', sa.String(length=64), nullable=True),
    sa.Column('region_id', sa.String(length=64), nullable=True),
    sa.Column('minion_id', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('instance_id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('group_policy_attachments',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.policy_id'], ),
    sa.PrimaryKeyConstraint('group_id', 'policy_id')
    )
    op.create_table('loadbalancer_listeners',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('listener_port', sa.Integer(), nullable=False),
    sa.Column('listener_protocol', sa.String(length=64), nullable=True),
    sa.Column('backend_server_port', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('loadbalancer_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['loadbalancer_id'], ['loadbalancers.loadbalancer_id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('policy_versions',
    sa.Column('version_id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=True),
    sa.Column('document', sa.JSON(), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('delete_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.policy_id'], ),
    sa.PrimaryKeyConstraint('version_id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('salt_pillars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('pillar_content', sa.JSON(), nullable=True),
    sa.Column('server_instance_id', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['server_instance_id'], ['servers.instance_id'], ),
    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.Column('update_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    mysql_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('user_group_relationships',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.group_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'group_id')
    )
    op.create_table('user_policy_attachments',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('policy_id', sa.Integer(), nullable=False),
    sa.Column('create_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.policy_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'policy_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_policy_attachments')
    op.drop_table('user_group_relationships')
    op.drop_table('users')
    op.drop_table('salt_pillars')
    op.drop_table('policy_versions')
    op.drop_table('loadbalancer_listeners')
    op.drop_table('group_policy_attachments')
    op.drop_table('servers')
    op.drop_table('policies')
    op.drop_table('loadbalancers')
    op.drop_table('groups')
    op.drop_table('dns_records')
    # ### end Alembic commands ###
